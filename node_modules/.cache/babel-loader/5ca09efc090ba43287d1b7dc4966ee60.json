{"ast":null,"code":"var _jsxFileName = \"/Users/shrddha.thakker/Documents/git/my-practice/react-nlist/src/components/FilesTable/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createRef } from 'react';\nimport Checkbox from '../Checkbox';\nimport Button from '../Button';\nimport StatusOrb from '../StatusOrb';\nimport { files } from './files-data';\nimport './styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isStatusAvailable = file => {\n  var _file$status;\n\n  return ((_file$status = file.status) === null || _file$status === void 0 ? void 0 : _file$status.toLowerCase()) === 'available';\n};\n\nfunction FilesTable() {\n  _s();\n\n  const [checkedState, setCheckedState] = useState(new Array(files.length).fill(false));\n  const [checkedCount, setCheckedCount] = useState(0);\n  const [allChecked, setAllChecked] = useState(false);\n  const selectAllRef = /*#__PURE__*/createRef();\n\n  const handleOnChange = position => {\n    const updatedCheckedState = checkedState.map((item, i) => i === position ? !item : item);\n    setCheckedState(updatedCheckedState);\n    const count = updatedCheckedState.filter(state => state === true).length;\n    setCheckedCount(count);\n    const allChecked = updatedCheckedState.every(k => k === true);\n    const indeterminate = updatedCheckedState.some(k => k === true); // handle select all checked state\n\n    if (allChecked) {\n      selectAllRef.current.indeterminate = false;\n    } else if (indeterminate) {\n      selectAllRef.current.indeterminate = true;\n    } else {\n      selectAllRef.current.indeterminate = false;\n    }\n  };\n\n  const handleAllCheck = () => {\n    const isAllChecked = !allChecked;\n\n    if (isAllChecked) {\n      const updatedCheckedState = checkedState.map(item => true);\n      setCheckedState(updatedCheckedState);\n    } else {\n      const updatedCheckedState = checkedState.map(item => false);\n      setCheckedState(updatedCheckedState);\n    }\n\n    setAllChecked(isAllChecked);\n  };\n\n  const handleDownload = () => {\n    const selectedFiles = checkedState.map((item, i) => item === true && isStatusAvailable(files[i]) ? i : undefined).filter(x => x).map(k => `${files[k].path} ~ ${files[k].device}\\n`);\n\n    if (selectedFiles.length > 0) {\n      alert(['Downloadable Files:\\n', ...selectedFiles].join(''));\n    } else {\n      alert('Only selected files that have status of \"available\" can be downloaded!');\n    }\n  };\n\n  console.log(\"checkedState\", checkedState);\n  console.log(\"allChecked\", allChecked);\n  console.log(\"checkedCount\", checkedCount);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"table-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex action\",\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n        elRef: selectAllRef,\n        label: `Selected ${checkedCount}`,\n        isChecked: allChecked,\n        handleChange: handleAllCheck\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: \"Download Selected\",\n        handleClick: handleDownload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Device\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Path\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              width: '18px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: files.map((file, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: {\n            background: checkedState[i] ? '#ddd' : ''\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              isChecked: checkedState[i],\n              handleChange: () => handleOnChange(i)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: file.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: file.device\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: file.path\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(StatusOrb, {\n              status: file.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: file.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FilesTable, \"Tmqzg2pAXXWSutvfsMYL829wLy4=\");\n\n_c = FilesTable;\nexport default FilesTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilesTable\");","map":{"version":3,"names":["React","useState","createRef","Checkbox","Button","StatusOrb","files","isStatusAvailable","file","status","toLowerCase","FilesTable","checkedState","setCheckedState","Array","length","fill","checkedCount","setCheckedCount","allChecked","setAllChecked","selectAllRef","handleOnChange","position","updatedCheckedState","map","item","i","count","filter","state","every","k","indeterminate","some","current","handleAllCheck","isAllChecked","handleDownload","selectedFiles","undefined","x","path","device","alert","join","console","log","width","background","name"],"sources":["/Users/shrddha.thakker/Documents/git/my-practice/react-nlist/src/components/FilesTable/index.js"],"sourcesContent":["import React, { useState, createRef } from 'react';\n\nimport Checkbox from '../Checkbox';\nimport Button from '../Button';\nimport StatusOrb from '../StatusOrb';\nimport { files } from './files-data';\nimport './styles.scss';\n\nconst isStatusAvailable = (file) => file.status?.toLowerCase() === 'available';\n\nfunction FilesTable() {\n  const [checkedState, setCheckedState] = useState(\n    new Array(files.length).fill(false)\n  );\n  const [checkedCount, setCheckedCount] = useState(0);\n  const [allChecked, setAllChecked] = useState(false);\n\n  const selectAllRef = createRef();\n\n  const handleOnChange = (position) => {\n    const updatedCheckedState = checkedState.map((item, i) =>\n      i === position ? !item : item\n    );\n\n    setCheckedState(updatedCheckedState);\n\n    const count = updatedCheckedState.filter((state) => state === true).length;\n    setCheckedCount(count);\n\n    const allChecked = updatedCheckedState.every((k) => k === true);\n    const indeterminate = updatedCheckedState.some((k) => k === true);\n\n    // handle select all checked state\n    if (allChecked) {\n      selectAllRef.current.indeterminate = false;\n    } else if (indeterminate) {\n      selectAllRef.current.indeterminate = true;\n    } else {\n      selectAllRef.current.indeterminate = false;\n    }\n  };\n\n  const handleAllCheck = () => {\n    const isAllChecked = !allChecked;\n\n    if (isAllChecked) {\n      const updatedCheckedState = checkedState.map((item) => true);\n\n      setCheckedState(updatedCheckedState);\n    } else {\n      const updatedCheckedState = checkedState.map((item) => false);\n\n      setCheckedState(updatedCheckedState);\n    }\n    setAllChecked(isAllChecked);\n  };\n\n  const handleDownload = () => {\n    const selectedFiles = checkedState\n      .map((item, i) =>\n        item === true && isStatusAvailable(files[i]) ? i : undefined\n      )\n      .filter((x) => x)\n      .map((k) => `${files[k].path} ~ ${files[k].device}\\n`);\n\n    if (selectedFiles.length > 0) {\n      alert(['Downloadable Files:\\n', ...selectedFiles].join(''));\n    } else {\n      alert(\n        'Only selected files that have status of \"available\" can be downloaded!'\n      );\n    }\n  };\n\n  console.log(\"checkedState\", checkedState);\n  console.log(\"allChecked\", allChecked);\n  console.log(\"checkedCount\", checkedCount);\n\n  return (\n    <section className='table-wrapper'>\n      <div className='flex action'>\n        <Checkbox\n          elRef={selectAllRef}\n          label={`Selected ${checkedCount}`}\n          isChecked={allChecked}\n          handleChange={handleAllCheck}\n        />\n        <Button text='Download Selected' handleClick={handleDownload} />\n      </div>\n\n      <table>\n        <thead>\n          <tr>\n            <th></th>\n            <th>Name</th>\n            <th>Device</th>\n            <th>Path</th>\n            <th style={{ width: '18px' }}></th>\n            <th>Status</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {files.map((file, i) => (\n            <tr key={i} style={{ background: checkedState[i] ? '#ddd' : '' }}>\n              <td>\n                <Checkbox\n                  isChecked={checkedState[i]}\n                  handleChange={() => handleOnChange(i)}\n                />\n              </td>\n              <td>{file.name}</td>\n              <td>{file.device}</td>\n              <td>{file.path}</td>\n              <td>\n                <StatusOrb status={file.status} />\n              </td>\n              <td>{file.status}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </section>\n  );\n}\n\nexport default FilesTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}