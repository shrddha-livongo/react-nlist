{"ast":null,"code":"var _jsxFileName = \"/Users/shrddha.thakker/Documents/git/my-practice/react-nlist/src/components/Checkbox/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useId } from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Checkbox(_ref) {\n  _s();\n\n  let {\n    elRef,\n    label,\n    isChecked,\n    handleChange\n  } = _ref;\n  const id = useId();\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    className: \"checkbox\",\n    htmlFor: id,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: elRef,\n      type: \"checkbox\",\n      id: id,\n      checked: isChecked,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), label && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"label-text\",\n      id: \"selectedCheckboxes\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Checkbox, \"WhsuKpSQZEWeFcB7gWlfDRQktoQ=\", false, function () {\n  return [useId];\n});\n\n_c = Checkbox;\nCheckbox.propTypes = {\n  elRef: PropTypes.object,\n  label: PropTypes.string,\n  isChecked: PropTypes.bool,\n  handleChange: PropTypes.func.isRequired\n};\nexport default Checkbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkbox\");","map":{"version":3,"names":["React","useId","PropTypes","Checkbox","elRef","label","isChecked","handleChange","id","propTypes","object","string","bool","func","isRequired"],"sources":["/Users/shrddha.thakker/Documents/git/my-practice/react-nlist/src/components/Checkbox/index.js"],"sourcesContent":["import React, { useId } from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.scss';\n\nfunction Checkbox({ elRef, label, isChecked, handleChange }) {\n  const id = useId();\n\n  return (\n    <label className='checkbox' htmlFor={id}>\n      <input\n        ref={elRef}\n        type='checkbox'\n        id={id}\n        checked={isChecked}\n        onChange={handleChange}\n      />\n      {label && (\n        <span className='label-text' id='selectedCheckboxes'>\n          {label}\n        </span>\n      )}\n    </label>\n  );\n}\n\nCheckbox.propTypes = {\n  elRef: PropTypes.object,\n  label: PropTypes.string,\n  isChecked: PropTypes.bool,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default Checkbox;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,KAAhB,QAA6B,OAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,eAAP;;;AAEA,SAASC,QAAT,OAA6D;EAAA;;EAAA,IAA3C;IAAEC,KAAF;IAASC,KAAT;IAAgBC,SAAhB;IAA2BC;EAA3B,CAA2C;EAC3D,MAAMC,EAAE,GAAGP,KAAK,EAAhB;EAEA,oBACE;IAAO,SAAS,EAAC,UAAjB;IAA4B,OAAO,EAAEO,EAArC;IAAA,wBACE;MACE,GAAG,EAAEJ,KADP;MAEE,IAAI,EAAC,UAFP;MAGE,EAAE,EAAEI,EAHN;MAIE,OAAO,EAAEF,SAJX;MAKE,QAAQ,EAAEC;IALZ;MAAA;MAAA;MAAA;IAAA,QADF,EAQGF,KAAK,iBACJ;MAAM,SAAS,EAAC,YAAhB;MAA6B,EAAE,EAAC,oBAAhC;MAAA,UACGA;IADH;MAAA;MAAA;MAAA;IAAA,QATJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD;;GAnBQF,Q;UACIF,K;;;KADJE,Q;AAqBTA,QAAQ,CAACM,SAAT,GAAqB;EACnBL,KAAK,EAAEF,SAAS,CAACQ,MADE;EAEnBL,KAAK,EAAEH,SAAS,CAACS,MAFE;EAGnBL,SAAS,EAAEJ,SAAS,CAACU,IAHF;EAInBL,YAAY,EAAEL,SAAS,CAACW,IAAV,CAAeC;AAJV,CAArB;AAOA,eAAeX,QAAf"},"metadata":{},"sourceType":"module"}